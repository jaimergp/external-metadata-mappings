{
  "$id": "https://github.com/python/peps/blob/main/peps/pep-0XXX/central-registry.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$defs": {
    "MappingWithSpecs": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "PURL-like identifier, as provided in the central registry,\nbeing mapped to ecosystem specific packages.",
          "minLength": 5,
          "pattern": "^dep:.+$",
          "title": "Id",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Free-form field for details about the mapping. Allows Markdown.",
          "title": "Description"
        },
        "specs": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "items": {
                "minLength": 1,
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/SpecsDict"
            }
          ],
          "description": "Package specifiers that provide the identifier at `id`.",
          "title": "Specs"
        },
        "urls": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "items": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "propertyNames": {
                "minLength": 1
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Hyperlinks to web locations that provide more information about the mapping.",
          "title": "Urls"
        }
      },
      "required": [
        "id",
        "specs"
      ],
      "title": "MappingWithSpecs",
      "type": "object"
    },
    "MappingWithSpecsFrom": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "PURL-like identifier, as provided in the central registry,\nbeing mapped to ecosystem specific packages.",
          "minLength": 5,
          "pattern": "^dep:.+$",
          "title": "Id",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Free-form field for details about the mapping. Allows Markdown.",
          "title": "Description"
        },
        "specs_from": {
          "description": "Identifier of another mapping entry with identical dependencies. Useful to avoid duplication.\nCannot be used together with `specs`.",
          "minLength": 5,
          "pattern": "^dep:.+$",
          "title": "Specs From",
          "type": "string"
        },
        "urls": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "items": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "propertyNames": {
                "minLength": 1
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Hyperlinks to web locations that provide more information about the mapping.",
          "title": "Urls"
        }
      },
      "required": [
        "id",
        "specs_from"
      ],
      "title": "MappingWithSpecsFrom",
      "type": "object"
    },
    "PackageManager": {
      "additionalProperties": false,
      "description": "Details of a particular package manager for this ecosystem.",
      "properties": {
        "name": {
          "description": "Name of the package manager",
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "commands": {
          "$ref": "#/$defs/PackageManagerCommands"
        },
        "version_operators": {
          "$ref": "#/$defs/VersionOperators",
          "default": {
            "and": ",",
            "arbitrary": "===",
            "compatible": "~=",
            "equal": "==",
            "greater_than": ">",
            "greater_than_equal": ">=",
            "less_than": "<",
            "less_than_equal": "<=",
            "not_equal": "!=",
            "separator": ""
          },
          "description": "Mapping of PEP440 version comparison operators to the syntax used in this package manager.\nIf set to an empty dictionary, it means that the package manager (or ecosystem)\ndoesn't support the notion of requesting particular package versions."
        }
      },
      "required": [
        "name",
        "commands"
      ],
      "title": "PackageManager",
      "type": "object"
    },
    "PackageManagerCommand": {
      "additionalProperties": false,
      "description": "Command template plus its elevation requirements.",
      "properties": {
        "command": {
          "default": [],
          "description": "Command template, as expected by `subprocess.run`. Use `{}` as a placeholder for package(s).",
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "title": "Command",
          "type": "array"
        },
        "requires_elevation": {
          "default": false,
          "description": "Whether the command requires elevated permissions to run.",
          "title": "Requires Elevation",
          "type": "boolean"
        }
      },
      "title": "PackageManagerCommand",
      "type": "object"
    },
    "PackageManagerCommands": {
      "additionalProperties": false,
      "description": "Command templates needed to execute certain operations with this package manager",
      "properties": {
        "install": {
          "$ref": "#/$defs/PackageManagerCommand",
          "description": "Command that must be used to install the given package(s). The tool must accept several\npackages in the same command. Each argument must be provided as a separate string, as\nin `subprocess.run`. Use `{}` as a placeholder where the package spec(s) must be injected.\nThe placeholder can only appear once in the whole list and will be replaced once per package.\nFor example, given the names `foo` and `bar`, `[\"pkg\", \"install\", \"{}\"]` would become\n`pkg install foo bar`, and `[\"pkg\", \"install\", \"--spec={}\"]` would become\n`pkg install --spec=foo --spec=bar`."
        },
        "query": {
          "anyOf": [
            {
              "$ref": "#/$defs/PackageManagerCommand"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Command to check whether a package is installed. The tool must only accept one package at a\ntime. Each argument must be provided as a separate string, as in `subprocess.run`. The `{}`\nplaceholder will be replaced by the single package. An empty list means no query command is\navailable for this package manager."
        }
      },
      "required": [
        "install"
      ],
      "title": "PackageManagerCommands",
      "type": "object"
    },
    "SpecsDict": {
      "additionalProperties": false,
      "properties": {
        "build": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "items": {
                "minLength": 1,
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Dependencies that must be present at build time and can be executed in the build machine.",
          "title": "Build"
        },
        "host": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "items": {
                "minLength": 1,
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Dependencies that must be present at build time but only for linking purposes.\nTheir architecture does not need to match the build machine.",
          "title": "Host"
        },
        "run": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "items": {
                "minLength": 1,
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Dependencies needed at runtime in the end-user machines.",
          "title": "Run"
        }
      },
      "title": "SpecsDict",
      "type": "object"
    },
    "VersionOperators": {
      "additionalProperties": false,
      "description": "Mapping of a PEP440 operator to a package manager specific operator.\nUse an empty string if there's no equivalent.",
      "properties": {
        "and": {
          "default": ",",
          "title": "And",
          "type": "string"
        },
        "arbitrary": {
          "default": "===",
          "title": "Arbitrary",
          "type": "string"
        },
        "compatible": {
          "default": "~=",
          "title": "Compatible",
          "type": "string"
        },
        "equal": {
          "default": "==",
          "title": "Equal",
          "type": "string"
        },
        "greater_than": {
          "default": ">",
          "title": "Greater Than",
          "type": "string"
        },
        "greater_than_equal": {
          "default": ">=",
          "title": "Greater Than Equal",
          "type": "string"
        },
        "less_than": {
          "default": "<",
          "title": "Less Than",
          "type": "string"
        },
        "less_than_equal": {
          "default": "<=",
          "title": "Less Than Equal",
          "type": "string"
        },
        "not_equal": {
          "default": "!=",
          "title": "Not Equal",
          "type": "string"
        },
        "separator": {
          "default": "",
          "title": "Separator",
          "type": "string"
        }
      },
      "title": "VersionOperators",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "default": "",
      "description": "URL of the mappings schema in use for the document.",
      "title": "$Schema",
      "type": "string"
    },
    "schema_version": {
      "default": 1,
      "exclusiveMaximum": 2,
      "minimum": 1,
      "title": "Schema Version",
      "type": "integer"
    },
    "name": {
      "description": "Name of the schema",
      "minLength": 1,
      "title": "Name",
      "type": "string"
    },
    "description": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Free-form field to add information this mapping. Allows Markdown.",
      "title": "Description"
    },
    "mappings": {
      "description": "List of PURL-to-specs mappings.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/MappingWithSpecs"
          },
          {
            "$ref": "#/$defs/MappingWithSpecsFrom"
          }
        ]
      },
      "title": "Mappings",
      "type": "array"
    },
    "package_managers": {
      "description": "List of tools that can be used to install packages in this ecosystem.",
      "items": {
        "$ref": "#/$defs/PackageManager"
      },
      "title": "Package Managers",
      "type": "array"
    }
  },
  "required": [
    "name",
    "package_managers",
    "mappings"
  ],
  "title": "MappingsModel",
  "type": "object"
}
